{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nclass notesOnClock {\n  constructor() {\n    //x,y positions of notes on clock\n    this.gapX = 0;\n    this.gapY = 0;\n  }\n  draw() {\n    for (let i = 0; i < window.noteData.length; i++) {\n      this.deadLineAngleHour = p5.map(window.noteData[i].hour, 0, 12, 0, 360); //scale hours to degrees\n      this.deadLineAngleMinute = p5.map(window.noteData[i].minute, 0, 59, 0, 30); //scale hours to degrees\n      //draw and rotate line-hours\n      p5.push();\n      p5.translate(250, 350); // change point of origin\n      //update x,y locations\n      if (i != 0 && window.noteData[i].hour != window.noteData[i - 1].hour) {\n        //notes inside different hour range doesnt depend on each others pos\n        this.resetGap();\n      }\n      this.gapX = this.gapX + 40 * p5.cos(this.deadLineAngleHour - 90);\n      this.gapY = this.gapY + 40 * p5.sin(this.deadLineAngleHour - 90);\n      //draw circle\n      p5.rotate(this.deadLineAngleMinute);\n      p5.fill(\"yellow\");\n      p5.ellipse(this.gapX, this.gapY, 20);\n      this.isDeadlineReached(i);\n      p5.pop();\n    }\n    this.resetGap();\n  }\n  resetGap() {\n    this.gapX = 0;\n    this.gapY = 0;\n  }\n  isDeadlineReached(i) {\n    console.log(window.hours);\n    if (window.hours == window.noteData[i].hour) {\n      //in same hour as current hour\n      if (window.noteData[i].minute == window.minutes) //deadline reached\n        {\n          if (window.noteData[i].status == \"done\") {\n            //completed task!!\n            p5.fill(\"green\");\n            p5.ellipse(this.gapX, this.gapY, 20);\n          } else {\n            //task not completed :(\n            p5.fill(\"red\");\n            this.triggerALarm();\n            p5.ellipse(this.gapX, this.gapY, 20);\n          }\n        }\n    }\n  }\n  triggerALarm() {}\n}\nexports.default = notesOnClock;"},"hash":"da24d031881e45db4c5d5a5651378992"}